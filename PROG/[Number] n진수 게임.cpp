// 소요시간: 27분
// 실행시간: 2ms

/*

튜브가 활동하는 코딩 동아리에서는 전통적으로 해오는 게임이 있다. 
이 게임은 여러 사람이 둥글게 앉아서 숫자를 하나씩 차례대로 말하는 게임인데, 규칙은 다음과 같다.

숫자를 0부터 시작해서 차례대로 말한다. 첫 번째 사람은 0, 두 번째 사람은 1, … 열 번째 사람은 9를 말한다.
10 이상의 숫자부터는 한 자리씩 끊어서 말한다. 
즉 열한 번째 사람은 10의 첫 자리인 1, 열두 번째 사람은 둘째 자리인 0을 말한다.

이렇게 게임을 진행할 경우,
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, …
순으로 숫자를 말하면 된다.

한편 코딩 동아리 일원들은 컴퓨터를 다루는 사람답게 이진수로 이 게임을 진행하기도 하는데, 이 경우에는
0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, …
순으로 숫자를 말하면 된다.

이진수로 진행하는 게임에 익숙해져 질려가던 사람들은 좀 더 난이도를 높이기 위해 
이진법에서 십육진법까지 모든 진법으로 게임을 진행해보기로 했다. 
숫자 게임이 익숙하지 않은 튜브는 게임에 져서 벌칙을 받는 굴욕을 피하기 위해, 
자신이 말해야 하는 숫자를 스마트폰에 미리 출력해주는 프로그램을 만들려고 한다. 튜브의 프로그램을 구현하라.

입력 형식
진법 n, 미리 구할 숫자의 갯수 t, 게임에 참가하는 인원 m, 튜브의 순서 p 가 주어진다.
2 ≦ n ≦ 16
0 ＜ t ≦ 1000
2 ≦ m ≦ 100
1 ≦ p ≦ m

출력 형식
튜브가 말해야 하는 숫자 t개를 공백 없이 차례대로 나타낸 문자열. 단, 10~15는 각각 대문자 A~F로 출력한다.

입출력 예제
n	t	m	p	result
2	4	2	1	0111
16	16	2	1	02468ACE11111111
16	16	2	2	13579BDF01234567

*/

/*

◆ 풀이

10진수를 n진수로 바꾸고, 자신의 차례에 맞게 숫자를 말할 수 있도록 answer을 구하는 문제.

따라서 10진수의 수를 n진수로 바꾸기 위한 함수 1개를 구현하고,
n진수를 어느 정도까지 구해야 하는지 리미트를 걸어준 후,
리미트에 도달하면 자신의 차례에 맞게 answer을 구해주면 된다.

코드가 길지 않기 때문에, 자세한 설명은 코드를 참고하도록!!

◆ 후기

사실 코드는 길게 나오지 않았지만, 은근 오래 걸렸던 문제.
10진수를 n진수로 바꾸기 위한 함수는 쉽게 구했는데, 자신의 차례를 어떻게 정할지에 대해 조금 오래 걸린 것 같다.

또한, 여러 인덱스 문제도 존재했다 ㅎㅎㅎ..
더 빨리 풀었을 수도 있었을 텐데 조금 아쉬운 문제 !!

*/

#include <string>
#include <vector>
#include <iostream>

using namespace std;

string seq = "0123456789ABCDEF";

string getNumber(int n, int num) {
    string number = "";
    while(num) {
        number = seq[num % n] + number;
        num /= n;
    }
    
    return number;
}

string solution(int n, int t, int m, int p) {
    string answer = "";
    string game = "0";
    
    int s = 1;
    while(1) {
        game += getNumber(n, s++);
        if(game.size() >= t * m) break;
    }
    
    for(int i=0; i<t; i++)
        answer += game[m * i + p - 1];
    
    return answer;
}