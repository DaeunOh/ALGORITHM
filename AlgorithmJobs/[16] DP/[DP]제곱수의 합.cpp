/*

문제
숫자 N을 제곱수의 합으로 표현하고자 할 때, 
사용해야 하는 제곱 수의 최소 개수를 출력하는 프로그램을 작성하시오. 
예를 들어, 숫자 45를 제곱수의 합으로 표현하고자 할 때 
필요한 제곱 수의 최소 개수는 2개이며, 이는 다음과 같다.

45 = 3^2 + 6^2

 

입력
첫 번째 줄에 N이 주어진다. ( 1 ≤ N ≤ 100,000 )  

출력
필요한 제곱 수의 최소 개수를 출력한다.

 

예제 입력
45
예제 출력
2
 

예제 입력
38
예제 출력
3

*/

/*

### 1. T[i] = i를 제곱수의 합으로 표현하기 위해 필요한 제곱수의 최소 개수

처음에는 i를 제곱수의 합으로 표현하기 위한 제곱수의 최소 개수가
항상 가능한 가장 큰 수의 제곱이 포함되어야 한다고 생각했다.
하지만, 12의 경우 내가 생각했던 방식으로 구현하면 3^2 + 1 + 1 + 1로 4개가 되는데,
원래 가장 최소 개수는 2^2 + 2^2 + 2^2로 3개이다.


어떻게 하면 최소 개수를 찾을 수 있을까 생각하다가
하나의 수를 "특정 수의 제곱"을 포함하도록 구해보고, 그 중 최소를 찾으면 어떨까 라는 생각을 했다.


### 2. T[i] = min(T[i], T[i - j * j] + 1) (단 j*j <= i까지)

이렇게 점화식을 세우면 j*j를 포함한 제곱수의 합으로 표현한 것이 되고, 그 중 최소가 T[i]가 되는 것이다.
(물론 T[i]의 최댓값은 i를 1의 제곱으로만 표현한 개수인 i이다)
즉, i가 12라면 T[12]는 12, T[11]+1, T[8]+1, T[3]+1 중 최소가 T[12]가 되는 것이다.


아이디어가 좀처럼 떠오르지 않아 구현하는데 많은 시간이 소요 되었으나, 정작 코드는 간결했던... 슬픈 문제..
여러 경우의 수를 따져가며 일반화 하는 연습을 조금 더 할 필요가 있는 것 같다.

*/

#include <stdio.h>

const int MAX = 100000 + 10;

int N;
int T[MAX] = {0, };

int getMin(int x, int y) {
  if(x < y) return x;
  else return y;
}

int main() {
  scanf("%d", &N);

  for(int i=1; i<=N; i++) {
    T[i] = i; // i를 1의 제곱수의 합으로 표현한 경우
    for(int j=1; j*j<=i; j++) {
      T[i] = getMin(T[i], T[i-j*j] + 1); // j*j를 포함한 제곱수의 합으로 표현한 것 중 최소를 T[i]에 대입
    }
  }
  
  printf("%d\n", T[N]);

  return 0;
}