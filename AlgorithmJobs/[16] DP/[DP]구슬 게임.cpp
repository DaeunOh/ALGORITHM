/*

문제
철수와 영희는 구슬 게임을 하려 한다. 이 구슬 게임의 규칙은 다음과 같다.

철수와 영희는 번갈아가며 구슬을 가져간다. 맨 처음에는 철수가 구슬을 가져간다.
구슬을 가져갈 때에는, 최소 1개에서 최대 3개까지 구슬을 가져갈 수 있다.
가져갈 구슬이 없는 사람이 진다.

예를 들어 5개의 구슬이 있다고 하자. 여기서 철수가 1개의 구슬을 가져가고, 
영희가 3개의 구슬을 가져간 후, 철수가 마지막으로 1개의 구슬을 가져갔다고 가정하면 
이 게임의 승자는 철수가 된다. 
물론, 각자가 어떻게 구슬을 가져가느냐에 따라 승패가 달라질 수 있다. 
철수와 영희는 이기기 위해서 최선을 다해서 게임을 플레이 한다. 
n개의 구슬을 시작으로 게임을 진행한다고 할 때, 
철수가 이 게임을 이길 수 있다면 YES, 그렇지 않다면 NO를 출력하는 프로그램을 작성하시오.

 

입력
첫째 줄에 전체 구슬의 개수n 이 주어진다. (0 ≤ n ≤ 1,000,000)  

출력
첫째 줄에 철수가 이길 수 있으면 YES, 그렇지 않으면 NO를 출력한다.

 

예제 입력
3
예제 출력
YES
 

예제 입력
5
예제 출력
YES
 

예제 입력
191124
예제 출력
NO

*/

/*

## 1. game[i] = 구슬 i개가 주어졌을 때의 승(true)/패(false)

철수가 항상 구슬을 먼저 가져가므로, 구슬이 3개 이하일 때는 항상 철수가 이긴다.
그렇기 때문에 기저조건은 1개, 2개, 3개일 때 true(승리) 이다.

그 이후에 4개 이상에 대한 승/패는 다음과 같이 계산한다.
예를 들어 4는 1 + 3, 2 + 2, 3 + 1으로 나눌 수 있다.
철수가 1개 내면 영희는 3개를 낼 것이고, 2개 내면 영희는 2개, 3개면 1개를 낼 것이다.
즉, 영희 기준에서 남은 구슬이 3개 이하이므로 철수가 몇 개를 가져가든 영희가 이기는 것이다.


## 2. if(game[i-1] && game[i-2] && game[i-1]) game[i] = false;

따라서 game[i]를 구하기 위해서는 game[i-1], game[i-2], game[i-3]을 보면 되고,
이 중 false(패배)인 경우가 한 개라도 있다면 game[i]는 true(승리)이고,
모두 true라면 game[i]는 false(패배)가 된다.


추가적으로 철수의 확정된 패배는 n이 4로 나눠지는 경우에만 한정되므로,
n % 4 == 0인 경우에 항상 NO를 출력한다면 정답과 같다.

*/

#include <stdio.h>

const int MAX = 1000000 + 10;

int n;
bool game[MAX];

int main() {
  scanf("%d", &n);
  
  // 기저조건
  game[1] = true, game[2] = true, game[3] = true;
  
  for(int i=4; i<=n; i++) {
    if(game[i-1] && game[i-2] && game[i-3]) game[i] = false;
    else game[i] = true;
  }
  
  if(game[n]) printf("YES\n");
  else printf("NO\n");

  return 0;
}