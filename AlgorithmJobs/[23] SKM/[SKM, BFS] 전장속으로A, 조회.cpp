/*

문제
N x N 행렬에 0 이상의 정수가 주어질 때, 0 이 아닌 숫자 중 최솟값을 찾아 해당 좌표를 출력해보자. 
만약 최솟값이 2개 이상일 경우 가장 위쪽에 존재하는 숫자를 출력하고, 
가장 위쪽에 존재하는 숫자가 여러 개일 경우 그 중에서도 가장 왼쪽에 존재하는 숫자를 출력한다.

battle_ground-A
위와 같이 숫자가 주어졌다고 하자. 
최솟값은 색칠이 되어있는 칸인 (1, 2), (1, 4), (5, 1) 이다. 
이 중에서 가장 위쪽이면서 왼쪽 위치는 (1, 2) 이다.

입력
첫 번째 줄에 행렬의 크기 N이 주어진다. 
두 번째 줄부터 N 개의 줄에 걸쳐 숫자가 주어진다. 
각 줄은 N개의 숫자로 이루어져 있다. 
각 숫자는 0 이상 10,000 이하의 정수이다. 
왼쪽 최상단의 좌표는 (1, 1)이다.
(2 ≤ N ≤ 20)

출력
0이 아닌 숫자 중 가장 작은 값의 y 좌표, x 좌표 순서대로 공백을 통해 구분하여 출력한다.

입력의 예 1
5
0 1 0 1 0 
0 0 0 0 2 
0 2 0 2 0 
0 3 9 0 0 
1 3 0 0 0
출력의 예 1
1 2

입력의 예 2
9
3 23 85 34 17 74 25 52 65
10 7 39 42 88 52 14 72 63
87 42 18 78 53 45 18 84 53
34 28 64 85 12 16 75 36 55
21 77 45 35 28 75 90 76 1
25 87 65 15 28 11 37 28 74
65 27 75 41 7 89 78 64 39
47 47 1 45 23 65 3 41 44
87 13 82 38 31 12 29 29 80
출력의 예 2
5 9

*/

#include <stdio.h>

int N;

int main() {
  scanf("%d", &N);
  
  int num, minY, minX;
  int min = 987987987;
  for(int i=1; i<=N; i++) {
    for(int j=1; j<=N; j++) {
      scanf("%d", &num);
      
      if(num != 0 && min > num) {
        min = num;
        minY = i;
        minX = j;
      }
    }
  }
  
  printf("%d %d\n", minY, minX);

  return 0;
}