// 소요시간: 20분
// 실행시간: 168ms

/*

시간 제한		메모리 제한	제출	정답	맞은 사람	정답 비율
2 초		512 MB		37977	9975	7167	25.131%

문제
총 N개의 시험장이 있고, 각각의 시험장마다 응시자들이 있다. i번 시험장에 있는 응시자의 수는 Ai명이다.
감독관은 총감독관과 부감독관으로 두 종류가 있다. 
총감독관은 한 시험장에서 감시할 수 있는 응시자의 수가 B명이고, 
부감독관은 한 시험장에서 감시할 수 있는 응시자의 수가 C명이다.

각각의 시험장에 총감독관은 오직 1명만 있어야 하고, 부감독관은 여러 명 있어도 된다.
각 시험장마다 응시생들을 모두 감시해야 한다. 이때, 필요한 감독관 수의 최솟값을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 시험장의 개수 N(1 ≤ N ≤ 1,000,000)이 주어진다.
둘째 줄에는 각 시험장에 있는 응시자의 수 Ai (1 ≤ Ai ≤ 1,000,000)가 주어진다.
셋째 줄에는 B와 C가 주어진다. (1 ≤ B, C ≤ 1,000,000)

출력
각 시험장마다 응시생을 모두 감독하기 위해 필요한 감독관의 최소 수를 출력한다.

예제 입력 1 
1
1
1 1
예제 출력 1 
1

예제 입력 2 
3
3 4 5
2 2
예제 출력 2 
7

예제 입력 3 
5
1000000 1000000 1000000 1000000 1000000
5 7
예제 출력 3 
714290

예제 입력 4 
5
10 9 10 9 10
7 20
예제 출력 4 
10

예제 입력 5 
5
10 9 10 9 10
7 2
예제 출력 5 
13

*/

/*

각 시험장마다 감독관을 배치해야 하는데, 이 문제에서는 총감독관과 부감독관이 감시할 수 있는 응시자의 수가 정해져있다.
또한, 시험장 안에 총감독관은 적어도 1명은 존재해야 하며, 부감독관은 없어도, 여러 명 있어도 가능하다.
(처음에는 총감독관 없이 부감독관만 있어도 되는줄 알았다..ㅎ)

총감독관은 무조건 1명은 있어야 하므로, 응시자의 수에서 총감독관이 감시 가능한 응시자의 수를 뺀 값이
1-1) 음수라면 카운트를 1만 증가시키고(총감독관 1명만으로 감시가 가능하다는 뜻이므로)
1-2) 양수라면 그 값을 %연산자를 사용해보고 2-1) 0인 경우에는 [그 값을 C로 나눈 값 + 1(총감독관)]만큼 카운트를 증가시키고,
2-2) 0이 아닌 경우에는 [그 값을 C로 나눈 값 + 2(총감독관, 부감독관)]만큼 카운트를 증가시키도록 구현했다.

시간복잡도는 A배열의 0부터 N-1까지 간단한 계산만 하면 되므로 O(N)이다! (시간 제한이 2초이므로 굉장히 충분!)
아! 그런데 문제를 풀 때 cnt의 자료형을 long long으로 해놓고, 습관적으로 출력할 때 %d를 ..사용해서 틀렸다 ㄷㄷ;;
로직상의 문제는 없어보여 뭘까 하다가 %lld를 사용해야 함을 나중에서야 알게 되었다...
다음에는 출력형식도 꼼꼼히 볼 것!!

*/

#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>

using namespace std;

const int MAX = 1000000 + 10;

int N;
int A[MAX];
int B, C;

long long cnt = 0;

int main() {
    scanf("%d", &N);
    for (int i = 0; i < N; i++) scanf("%d", &A[i]);
    scanf("%d %d", &B, &C);

    for (int i = 0; i < N; i++) {
        int val = A[i] - B;
        if (val > 0) {
            if (val % C == 0) cnt += val / C;
            else cnt += val / C + 1;
        }

        cnt++;
    }

    printf("%lld\n", cnt);


    return 0;
}